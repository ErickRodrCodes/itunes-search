import { iTunesSearch as _iTunesSearch } from "./iTunesSearch/index";
declare const iTunesSearch: _iTunesSearch;
export declare const searchAlbum: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchArtist: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchAll: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchApp: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchAudiobook: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchBook: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchMovie: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchMusicVideo: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchPodcast: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>, searchSong: (term: string, options?: import("./iTunesSearch/interfaces").ISearchAllOptions | undefined) => Promise<import("./typings/types").ReturnType>;
export default iTunesSearch;
//# sourceMappingURL=index.d.ts.map